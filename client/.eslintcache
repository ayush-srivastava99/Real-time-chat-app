[{"/home/ayush/Desktop/Chatapp/client/src/index.js":"1","/home/ayush/Desktop/Chatapp/client/src/App.js":"2","/home/ayush/Desktop/Chatapp/client/src/components/Chat/Chat.js":"3","/home/ayush/Desktop/Chatapp/client/src/components/Join/Join.js":"4","/home/ayush/Desktop/Chatapp/client/src/components/InfoBar/InfoBar.js":"5","/home/ayush/Desktop/Chatapp/client/src/components/Input/Input.js":"6","/home/ayush/Desktop/Chatapp/client/src/components/Messages/Messages.js":"7","/home/ayush/Desktop/Chatapp/client/src/components/Messages/Message/Message.js":"8"},{"size":145,"mtime":1610563541243,"results":"9","hashOfConfig":"10"},{"size":361,"mtime":1610566039285,"results":"11","hashOfConfig":"10"},{"size":1896,"mtime":1610741881738,"results":"12","hashOfConfig":"10"},{"size":906,"mtime":1610608469557,"results":"13","hashOfConfig":"10"},{"size":516,"mtime":1610724545816,"results":"14","hashOfConfig":"10"},{"size":560,"mtime":1610735713230,"results":"15","hashOfConfig":"10"},{"size":377,"mtime":1610741991398,"results":"16","hashOfConfig":"10"},{"size":975,"mtime":1610741997406,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1blpe33",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/ayush/Desktop/Chatapp/client/src/index.js",[],["36","37"],"/home/ayush/Desktop/Chatapp/client/src/App.js",[],"/home/ayush/Desktop/Chatapp/client/src/components/Chat/Chat.js",["38"],"import React ,{useState,useEffect}from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\n\nimport InfoBar from '../InfoBar/InfoBar.js'\nimport Input from '../Input/Input.js';\nimport './Chat.css';\nimport Messages from '../Messages/Messages.js';\n\nvar connectionOptions =  {\n    \"force new connection\" : true,\n    \"reconnectionAttempts\": \"Infinity\", \n    \"timeout\" : 10000,                  \n    \"transports\" : [\"websocket\"]\n};\n\n\nlet socket;\nconst ENDPOINT='localhost:5000';\nconst Chat = ({location}) => {\n    const [name,setName] =useState('');\n    const [room,setRoom]=useState('');\n    const [message,setMessage]=useState('');\n    const [messages,setMessages]=useState([]);\n\n\n    useEffect(()=>{\n        const {name,room}=queryString.parse(location.search);\n        socket=io(ENDPOINT,connectionOptions);\n        setName(name);\n        setRoom(room);\n        socket.emit('join',{name,room},()=>{\n            \n\n        });\n        return ()=>{\n            socket.emit('disconnect');\n\n            socket.off();\n        }\n    },[ENDPOINT,location.search]);\n\n    useEffect(()=>{\n        socket.on('message',(message)=>{\n            setMessages([...messages,message]);\n        })\n    },[messages]);\n\n    const sendMessage=(event)=>{\n        event.preventDefault();\n        if(message){\n            console.log(message+\"heyyyyyyyy YYYYYYY\");\n            socket.emit('sendMessage',message,()=>setMessage(''));\n        }\n        console.log(messages);\n    }\n    console.log(message,messages);\n\n    return (\n        <div className=\"outerContainer\">\n        <div className=\"container\">\n            <InfoBar room={room} />\n            <Messages messages={messages} name={name} />\n            <Input message={message} setMessage={setMessage} sendMessage={sendMessage} />\n        </div>\n        {/* <TextContainer users={users}/> */}\n      </div>\n    )\n}\n\nexport default Chat;\n","/home/ayush/Desktop/Chatapp/client/src/components/Join/Join.js",[],"/home/ayush/Desktop/Chatapp/client/src/components/InfoBar/InfoBar.js",[],"/home/ayush/Desktop/Chatapp/client/src/components/Input/Input.js",[],"/home/ayush/Desktop/Chatapp/client/src/components/Messages/Messages.js",[],"/home/ayush/Desktop/Chatapp/client/src/components/Messages/Message/Message.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":41,"column":7,"nodeType":"45","endLine":41,"endColumn":33,"suggestions":"46"},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'ENDPOINT'. Either exclude it or remove the dependency array. Outer scope values like 'ENDPOINT' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["49"],"no-global-assign","no-unsafe-negation",{"desc":"50","fix":"51"},"Update the dependencies array to be: [location.search]",{"range":"52","text":"53"},[1057,1083],"[location.search]"]